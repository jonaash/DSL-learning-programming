package KarelBasic.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  /*package*/ final ConceptDescriptor myConceptAbstractCommand = new ConceptDescriptorBuilder("KarelBasic.structure.AbstractCommand", MetaIdFactory.conceptId(0x5540ad23650b4fa5L, 0xb8b5236a8e7e1c34L, 0x32856cfa56f4dc50L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptCodeBlock = new ConceptDescriptorBuilder("KarelBasic.structure.CodeBlock", MetaIdFactory.conceptId(0x5540ad23650b4fa5L, 0xb8b5236a8e7e1c34L, 0x6ebf27d3dd3ab7L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(31172425217293011L, "commands", MetaIdFactory.conceptId(0x5540ad23650b4fa5L, 0xb8b5236a8e7e1c34L, 0x32856cfa56f4dc50L), true, true, false)).children(new String[]{"commands"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptLeftTurn = new ConceptDescriptorBuilder("KarelBasic.structure.LeftTurn", MetaIdFactory.conceptId(0x5540ad23650b4fa5L, 0xb8b5236a8e7e1c34L, 0x32856cfa56f89c0bL)).super_("KarelBasic.structure.AbstractCommand").super_(MetaIdFactory.conceptId(0x5540ad23650b4fa5L, 0xb8b5236a8e7e1c34L, 0x32856cfa56f4dc50L)).parents("KarelBasic.structure.AbstractCommand").parentIds(MetaIdFactory.conceptId(0x5540ad23650b4fa5L, 0xb8b5236a8e7e1c34L, 0x32856cfa56f4dc50L)).alias("turnLeft", "command to make robot to turn left on current place").create();
  /*package*/ final ConceptDescriptor myConceptScript = new ConceptDescriptorBuilder("KarelBasic.structure.Script", MetaIdFactory.conceptId(0x5540ad23650b4fa5L, 0xb8b5236a8e7e1c34L, 0x32856cfa56f8a3f4L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.execution.util.structure.IMainClass").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L), MetaIdFactory.conceptId(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L)).childDescriptors(new ConceptDescriptorBuilder.Link(31172425217292863L, "body", MetaIdFactory.conceptId(0x5540ad23650b4fa5L, 0xb8b5236a8e7e1c34L, 0x6ebf27d3dd3ab7L), false, false, false)).children(new String[]{"body"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptStep = new ConceptDescriptorBuilder("KarelBasic.structure.Step", MetaIdFactory.conceptId(0x5540ad23650b4fa5L, 0xb8b5236a8e7e1c34L, 0x32856cfa56f47a3cL)).super_("KarelBasic.structure.AbstractCommand").super_(MetaIdFactory.conceptId(0x5540ad23650b4fa5L, 0xb8b5236a8e7e1c34L, 0x32856cfa56f4dc50L)).parents("KarelBasic.structure.AbstractCommand").parentIds(MetaIdFactory.conceptId(0x5540ad23650b4fa5L, 0xb8b5236a8e7e1c34L, 0x32856cfa56f4dc50L)).alias("step", "command to make robot one step in current direction").create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractCommand, myConceptCodeBlock, myConceptLeftTurn, myConceptScript, myConceptStep);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0j, conceptFqName)) {
      case 0:
        return myConceptAbstractCommand;
      case 1:
        return myConceptCodeBlock;
      case 2:
        return myConceptLeftTurn;
      case 3:
        return myConceptScript;
      case 4:
        return myConceptStep;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0j = new String[]{"KarelBasic.structure.AbstractCommand", "KarelBasic.structure.CodeBlock", "KarelBasic.structure.LeftTurn", "KarelBasic.structure.Script", "KarelBasic.structure.Step"};
}
